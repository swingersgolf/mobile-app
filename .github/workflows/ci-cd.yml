name: CI/CD Pipeline

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'
      
    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test

  build:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Build project
      run: npm run build

  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Expo CLI
      run: npm install -g expo-cli

    - name: Authenticate with Expo
      env:
        EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
      run: expo login --token $EXPO_TOKEN

    - name: Publish to Expo
      run: expo publish

    - name: Deploy to Apple App Store
      env:
        FASTLANE_USER: ${{ secrets.APPLE_ID }}
        FASTLANE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
        FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
      run: |
        sudo gem install fastlane -NV
        fastlane deliver

    - name: Deploy to Google Play Store
      env:
        GOOGLE_PLAY_SERVICE_ACCOUNT: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
      run: |
        sudo gem install fastlane -NV
        fastlane supply

  review:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
    - name: Require review
      run: echo "Review required before merging pull request."
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
